

1.
    pros:
        more control over the system.
        probably more flexability in tools you can choose to use.
        might be less costly then paying someone else to host it.

    cons:
        higher maintenance cost (money or time).
        potentially higher security risk.
        server total % up time is likely to be less.

2.
    d, e, f


3.
    a. the separation of ui design, control logic, and data storage/management
    b. Model
    c. html, css, js
    d. js
    e. 
        with js it gets tricky the logic for manipulating data or sending it to the database
        can probably exist in both the front and back end

        frontend collects packages and sends a post request to the server, 
        the server breaks the message received into fields and makes an update on a database.
        I guess the server is really doing the sending to db and manipulating of data.

        the frontend is just displaying info to the user and presenting a means of
        collecting information.

4.
    a. curl is a command to send or receive data from a server
    b. -X specifies an http request, the argument passed here is the type 
        of request, (GET,PUT,POST...)

    c. https is the scheme, adopt-pet.com is the hostname, /dogs is the first route
        /rosa is the sub-route

    d. I think the h is supposed to be capitalized. -h is the help flag, -H is the header flag.
        "Content-Type: application/json" is a key value pair being sent as the http header
        Content-Type being the key, application/json being the value.

        I'm not entirely sure but i think application/json is specifieing the
        MIME-type, or using MIME-type to specify file type?

    e. -d is the data flag, the rest is the data being sent structured as json.
        ownername is the key, Xu is the value... similarly for the other pair of empty strings


5.
    cronjobs specifying @reboot will run a task on reboot.
    probably more widely used is systemd services to specify
    services to start on bootup or maintenance

6.
    python3 -m http.server 80
    I haven't used another way that doesn't involve writing a 
    js file to run a http server and listen on a specific port.
    node server.js

