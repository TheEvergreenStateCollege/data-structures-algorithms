{
  "tracks": [
    {
      "name": "Concrete Examples",
      "width": "265"
    },
    {
      "name": "Synthesis and Lateral Thinking",
      "width": "391"
    }
  ], 
  "weeks": { 
    "1": {
      "first": [
        "A Self-Guided Tour",
        "RAM Model, Lists",
        "Arrays, Links, Counters",
        "Interfaces, CRUD Operations"
      ],
      "second": [
        "IntelliJ and Git: practice and warmup",
        "Pair Programming: what roles? what rules?",
        "Learning Log, ChatGPT / AI prompting",
        "ChangeMaker teams, learning together"
      ]
    },
    "2": {
      "first": [
        "Implementation vs. Interfaces",
        "Stacks, Queues",
        "Key-Value Maps, Hashing",
        "Collisions, Links"
      ],
      "second": [
        "Time-Space and Other Dualities, Resources",
        "How to trade off time for space, vice versa?",
        "Combining two or more data structures",
        "Counting and visualizing resources: VisualVM"
      ]
    },
    "3": {
      "first": [
        "Asymptotic Analysis (Big O)",
        "Trees, Relations, Searching",
        "Traversals: Bread-first, Depth-First",
        "Heaps (Priority Queues)"
      ],
      "second": [
        "Recursion and Iteration",
        "Cleaning Up: Invariants, Rebalancing",
        "Combining two or more data structures",
        "Overview of Final Project: Problem-Finding"
      ]
    },
    "4": {
      "first": [
        "Rebalancing Trees",
        "Red-Black Trees",
        "Rebalancing Heaps",
        "Inventing New Data Structures"
      ],
      "second": [
        "An Exotic Zoo: Fibonacci Forest, Skip Lists",
        "Amortized Analysis",
        "Combining two or more data structures",
        "Final Project Work: Collecting / Mocking Datasets"
      ]
    },
    "5": {
      "first": [
        "Maximum Subset Sum",
        "Dynamic Programming",
        "Interval Scheduling",
        "Satisficing (Greedy)"
      ],
      "second": [
        "Subproblems",
        "Memoizing / Caching",
        "Combining two or more algorithms",
        "Final Project Work: Collecting Datasets"
      ]
    },
    "6": {
      "first": [
        "Graphs",
        "Topological Sort, Dependencies",
        "Shortest Path (Dijkstra's)",
        "Network Flow"
      ],
      "second": [
        "MapQuest / Google Maps",
        "Find algorithms in the news",
        "Final Project Work: Designing Operations",
        "AI proompting and co-pilot: write code"
      ]
    },
    "7": {
      "first": [
        "Sorting, with Heaps and Trees",
        "Merge Sort",
        "Quicksort",
        "Radix Sort"
      ],
      "second": [
        "Randomized analysis",
        "Combining two sorts",
        "Joke Sorts: delay as much as possible",
        "Art: Pixel sorting"
      ]
    },
    "8": {
      "first": [
        "Database Indexes, Search",
        "Page Rank",
        "Linear Systems of Equations",
        "Constraint Satisfaction"
      ],
      "second": [
        "Boggle / Scrabble",
        "Final Project Work: Analysis and Correctness",
        "Find linear systems / constraints in real-life",
        "Connect DS &amp; A to another discipline"
      ]
    },
    "9": {
      "first": [
        "Karatsuba / Matrix Multiplication",
        "Divide and Conquer",
        "Streaming Algorithms",
        "Parallel Merge Sort"
      ],
      "second": [
        "Data Privacy",
        "Find algorithms in the news",
        "Parallelize a previous algorithm",
        "Final Project Work: Analysis and Correctness"
      ]
    },
    "10": {
      "first": [
        "Bonus Topics / Catchup Week",
        "Quantum DS &amp; A",
        "Recommender Systems",
        "Collaborative Filtering"
      ],
      "second": [
        "Finding Real World Examples: Go Local, Go Deep",
        "Final Project Work",
        "Synthesizing notes&nbsp;"
      ]
    }
  }
}
