2-15. Suppose you have algorithms with the five running times listed below. 
(Assume these are the exact running times.) How much slower do each of these 
algorithms get when you (a) double the input size, or (b) increase the input size by one?
(a) n^2
    (a) increases slowness by about 4 times 2(n^2) vs 4(n^2)
    (b) (n+1)^2 or about 2n + 1 units slower.
(b) n^3
    (a) increases slowness by about 8 times 2(n^3) vs 4(n^3)
    (b) (n+1)^3 or about 3n^2 + 3n + 1 units slower.
(c) 100n^2
    (a) increases slowness by about x time 100(2n^2) = 100*4(n^2) = 400n^2
    (b) gets about 200n + 100 units slower
(d) nlogn
    (a) Running time should be about the same
    (b) running time should be about the same
(e) 2^n
    (a) 2^2n which is the square slowness
    (b) 2^n+1 or 2 + 2^n or double the slowness