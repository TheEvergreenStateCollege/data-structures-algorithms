function cookies(k, A):
    // Create a priority queue (min-heap) to store the sweetness of cookies.
    pq = PriorityQueue()

    // Initialize the priority queue with the elements from the list A.
    pq.addAll(A)

    // Initialize the count of operations to 0.
    operations = 0

    // Continue the process until there's only one cookie in the queue
    // or the least sweet cookie in the queue has sweetness >= k.
    while pq.size() > 1 and pq.peek() < k:
        // Take the two least sweet cookies from the queue.
        firstCookie = pq.poll()
        secondCookie = pq.poll()

        // Combine the two cookies and calculate their sweetness.
        combinedSweetness = firstCookie + (2 * secondCookie)

        // Put the combined cookie back in the queue.
        pq.offer(combinedSweetness)

        // Increment the number of operations.
        operations++

    // Check if the desired sweetness level k is achieved.
    if pq.peek() >= k:
        // If achieved, return the number of operations.
        return operations
    else:
        // If not achieved, return -1 to indicate it's not possible.
        return -1
